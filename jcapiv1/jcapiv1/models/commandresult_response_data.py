# coding: utf-8

"""
    JumpCloud APIs

     JumpCloud's V1 API. This set of endpoints allows JumpCloud customers to manage commands, systems, & system users.

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class CommandresultResponseData(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'output': 'str',
        'exit_code': 'int'
    }

    attribute_map = {
        'output': 'output',
        'exit_code': 'exitCode'
    }

    def __init__(self, output=None, exit_code=None):
        """
        CommandresultResponseData - a model defined in Swagger
        """

        self._output = None
        self._exit_code = None

        if output is not None:
          self.output = output
        if exit_code is not None:
          self.exit_code = exit_code

    @property
    def output(self):
        """
        Gets the output of this CommandresultResponseData.
        The output of the command that was executed.

        :return: The output of this CommandresultResponseData.
        :rtype: str
        """
        return self._output

    @output.setter
    def output(self, output):
        """
        Sets the output of this CommandresultResponseData.
        The output of the command that was executed.

        :param output: The output of this CommandresultResponseData.
        :type: str
        """

        self._output = output

    @property
    def exit_code(self):
        """
        Gets the exit_code of this CommandresultResponseData.
        The stderr output from the command that ran.

        :return: The exit_code of this CommandresultResponseData.
        :rtype: int
        """
        return self._exit_code

    @exit_code.setter
    def exit_code(self, exit_code):
        """
        Sets the exit_code of this CommandresultResponseData.
        The stderr output from the command that ran.

        :param exit_code: The exit_code of this CommandresultResponseData.
        :type: int
        """

        self._exit_code = exit_code

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, CommandresultResponseData):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
